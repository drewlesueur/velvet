test "setting a variable"
  band is "aterciopelados"
  band should be "aterciopelados"



test "using lists"
  my_list is list "zer0" 1 2 "three" "four" 5
  my_list 0 should be "zer0"
  my_list 1 should be 1
  my_list -1 should be is 5

test "using objects"
  my_obj is (object name "aterciopelados" members (list "a" "h"))
  my_obj name should be "aterciopelados"
  my_obj members 0 should be "a"
  

test "creating the object for you like php"
  my_obj2 albums 1 is "El Dorado"
  my_obj2 keys should be list "albums"
  my_obj2 albums 1 should be "El Dorado"

test "objects and functions"
  hero is something
  hero name is "Mr. Starman"
  hero save_world is func (world)
    hero worlds_saved is hero worlds_saved + 1
    hero
  hero save_cat is func (name)
    hero cats_saved append (name)

  prop is "name"

  the_name is hero (prop) 

  #chaining
  hero keys 0
  
  hero chain save world () save_cat ("mrs. catty")

  


   

  

  
test "lexical scope"      


test "functions"
  def play_music


"""
  destructuring


test "simple multi line strings"
  set my_string """
    this is a multi line string
    just use intention to figure out
    where it ends

  set my_string """
    this is a long string
    you have to be able to see it
    you can interpolate #{as well}


  macro """
    (set #{you})

  quote = """
    this is a " quote

    
test "setting a function"
  say_hi is fn (name)
    print "hello #{name}"

test "setting an object"
  band is object
    name       "atericiopelados"
    started     1992
    music_type "rock"
    members     list
      "Andrea Echeverri" 
      "Hector Buitrago"
       
    
test "calling a function with no params"    
  beach.title_wave .

    
    

  assert my_string is "this is a multi line string\n
just use indention to figure out\nwhere it ends"






-----


band is "a"

setSmile is func ((objectmacro band) trim)
  band smile is true
  
  trim "process  "

def setSmile (band trim)
  def (band smile) true
  

setSmile is func (band trim)
  macroify band

  
def should "should"
def be "be"

test "setting a variable"
  def band "Aterciopelados"
  band should be "Aterciopelados"

test "using lists"
  def mylist list "zer0" 1 2 "three"
  mylist 0 should be "zer0"
  mylist 1 should be 
